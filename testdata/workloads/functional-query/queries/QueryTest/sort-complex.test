====
---- QUERY
# Sort a collection.
select id, int_array from complextypestbl order by id
---- RESULTS
1,'[1,2,3]'
2,'[null,1,2,null,3,null]'
3,'[]'
4,'NULL'
5,'NULL'
6,'NULL'
7,'NULL'
8,'[-1]'
---- TYPES
bigint,string
====
---- QUERY
# Sort collection from HMS view.
select id, int_array from complextypes_arrays_only_view order by id
---- RESULTS
1,'[1,2,3]'
2,'[null,1,2,null,3,null]'
3,'[]'
4,'NULL'
5,'NULL'
6,'NULL'
7,'NULL'
8,'[-1]'
---- TYPES
bigint,string
====
---- QUERY
# Sort collection from WITH-clause inline view.
with v as (
  select id, int_array from complextypestbl
)
select id, int_array from v order by id
---- RESULTS
1,'[1,2,3]'
2,'[null,1,2,null,3,null]'
3,'[]'
4,'NULL'
5,'NULL'
6,'NULL'
7,'NULL'
8,'[-1]'
---- TYPES
bigint,string
====
---- QUERY
# Sort collection from nested query inline view.
select id, int_array
from (select id, int_array from complextypestbl) v
order by id
---- RESULTS
1,'[1,2,3]'
2,'[null,1,2,null,3,null]'
3,'[]'
4,'NULL'
5,'NULL'
6,'NULL'
7,'NULL'
8,'[-1]'
---- TYPES
bigint,string
====
---- QUERY
# Sort a collection that is join-unnested.
select id, a.item
from complextypestbl t, t.int_array_array a
order by id;
---- RESULTS
1,'[1,2]'
1,'[3,4]'
2,'[null,1,2,null]'
2,'[3,null,4]'
2,'[]'
2,'NULL'
3,'NULL'
7,'NULL'
7,'[5,6]'
8,'[-1,-2]'
8,'[]'
---- TYPES
bigint,string
====
---- QUERY
# Sort a collection that is join-unnested in a WITH-clause inline view.
with v as (
  select id, a.item arr
  from complextypestbl t, t.int_array_array a
)
select id, arr from v order by id;
---- RESULTS
1,'[1,2]'
1,'[3,4]'
2,'[null,1,2,null]'
2,'[3,null,4]'
2,'[]'
2,'NULL'
3,'NULL'
7,'NULL'
7,'[5,6]'
8,'[-1,-2]'
8,'[]'
---- TYPES
bigint,string
====
---- QUERY
# Sort a collection that is join-unnested in a nested query inline view.
select id, arr
from (
    select id, a.item arr
    from complextypestbl t, t.int_array_array a
  ) v
order by id;
---- RESULTS
1,'[1,2]'
1,'[3,4]'
2,'[null,1,2,null]'
2,'[3,null,4]'
2,'[]'
2,'NULL'
3,'NULL'
7,'NULL'
7,'[5,6]'
8,'[-1,-2]'
8,'[]'
---- TYPES
bigint,string
====
---- QUERY
# Sorting is not supported yet for arrays containing varlen types: IMPALA-10939
select id, arr_string_1d from collection_tbl order by id
---- CATCH
AnalysisException: Sorting is not supported if the select list contains (possibly nested) collections with variable length data types.
====
---- QUERY
# Sorting is not supported yet for arrays containing varlen types: IMPALA-10939
select id, int_array_array from complextypestbl order by id
---- CATCH
AnalysisException: Sorting is not supported if the select list contains (possibly nested) collections with variable length data types.
====
---- QUERY
# Being in the sorting tuple is supported for maps containing only fixed length types:
# IMPALA-10939
select id, map_int_int, map_char3_char5 from map_non_varlen order by id desc
---- RESULTS
10,'{100:1000,101:1010,102:1020}','{"aaj":"aaaaj"}'
9,'{90:900,91:910,92:920}','{"aai":"aaaai"}'
8,'{80:800,81:810,82:820}','{"aah":"aaaah"}'
7,'{70:700,71:710,72:720}','{"aag":"aaaag"}'
6,'{60:600,61:610,62:620}','{"aaf":"aaaaf"}'
5,'{50:500,51:510,52:520}','{"aae":"aaaae"}'
4,'{40:400,41:410,42:420}','{"aad":"aaaad"}'
3,'{30:300,31:310,32:320}','{"aac":"aaaac"}'
2,'{20:200,21:210,22:220}','{"aab":"aaaab"}'
1,'{10:100,11:110,12:120}','{"aaa":"aaaaa"}'
---- TYPES
int,string,string
====
---- QUERY
# Sorting is not supported yet for collections containing varlen types: IMPALA-10939
select id, int_map_array, int_map from complextypestbl order by id
---- CATCH
AnalysisException: Sorting is not supported if the select list contains (possibly nested) collections with variable length data types.
====
---- QUERY
# Sorting is not supported yet for collections within structs: IMPALA-10939. Test with a
# struct that contains an array.
select id, struct_contains_arr from collection_struct_mix order by id
---- CATCH
AnalysisException: Sorting is not supported if the select list contains collection(s) nested in struct(s).
====
---- QUERY
# Sorting is not supported yet for collections within structs: IMPALA-10939. Test with a
# struct that contains a map.
select id, struct_contains_map from collection_struct_mix order by id;
---- CATCH
AnalysisException: Sorting is not supported if the select list contains collection(s) nested in struct(s).
====
---- QUERY
# Sort collection selected from within a struct.
select id, struct_contains_arr.arr from collection_struct_mix order by id desc;
---- RESULTS
2,'NULL'
1,'[1,2,3,4,null,null,5]'
---- TYPES
INT,STRING
====
---- QUERY
# Sort collection containing a struct.
select id, arr_contains_struct from collection_struct_mix order by id desc;
---- RESULTS
2,'[{"i":100},{"i":8},{"i":35},{"i":45},null,{"i":193},{"i":null}]'
1,'[{"i":1},{"i":2},{"i":3},{"i":4},null,{"i":5},{"i":null}]'
---- TYPES
INT,STRING
====
---- QUERY
# Sorting a collection containing a struct that contains var-len data is not supported.
select id, arr_contains_nested_struct from collection_struct_mix order by id desc;
---- CATCH
AnalysisException: Sorting is not supported if the select list contains (possibly nested) collections with variable length data types.
====
